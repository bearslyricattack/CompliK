apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: {{ .Values.app.name }}
  name: {{ .Values.app.name }}-config
  namespace: {{ .Values.namespace }}
data:
  config.yml: |
    plugins:
      - name: "Complete"
        type: "Discovery"
        enabled: {{ .Values.plugins.complete.enabled }}
        settings: |
          {
            "intervalMinute": {{ .Values.plugins.complete.intervalMinute }},
            "autoStart": {{ .Values.plugins.complete.autoStart }},
            "startTimeSecond": {{ .Values.plugins.complete.startTimeSecond }}
          }
      - name: "Devbox"
        type: "Discovery"
        enabled: {{ .Values.plugins.devbox.enabled }}
        settings: |
          {
            "intervalMinute": {{ .Values.plugins.devbox.intervalMinute }},
            "autoStart": {{ .Values.plugins.devbox.autoStart }},
            "startTimeSecond": {{ .Values.plugins.devbox.startTimeSecond }}
          }
      - name: "Endpointslice"
        type: "Discovery"
        enabled: {{ .Values.plugins.endpointslice.enabled }}
        settings: '{}'
      - name: "Deployment"
        type: "Discovery"
        enabled: {{ .Values.plugins.deployment.enabled }}
        settings: |
          {
            "resyncTimeSecond": {{ .Values.plugins.deployment.resyncTimeSecond }},
            "ageThresholdSecond": {{ .Values.plugins.deployment.ageThresholdSecond }}
          }
      - name: "StatefulSet"
        type: "Discovery"
        enabled: {{ .Values.plugins.statefulset.enabled }}
        settings: |
          {
            "resyncTimeSecond": {{ .Values.plugins.statefulset.resyncTimeSecond }},
            "ageThresholdSecond": {{ .Values.plugins.statefulset.ageThresholdSecond }}
          }
      - name: "Browser"
        type: "Compliance"
        enabled: {{ .Values.plugins.browser.enabled }}
        settings: |
          {
            "timeout": {{ .Values.plugins.browser.timeout }},
            "maxWorkers": {{ .Values.plugins.browser.maxWorkers }}
          }
      - name: "Safety"
        type: "Compliance"
        enabled: {{ .Values.plugins.safety.enabled }}
        settings: |
          {
            "apiKey": {{ .Values.external.ai.apiKey | quote }},
            "apiBase": {{ .Values.external.ai.apiBase | quote }},
            "apiPath": {{ .Values.external.ai.apiPath | quote }},
            "model": {{ .Values.external.ai.model | quote }}
          }
      - name: "Custom"
        type: "Compliance"
        enabled: {{ .Values.plugins.custom.enabled }}
        settings: |
          {
            "databaseName": {{ .Values.plugins.custom.databaseName | quote }},
            "tickerMinute": {{ .Values.plugins.custom.tickerMinute }},
            "maxWorkers": {{ .Values.plugins.custom.maxWorkers }},
            "host": {{ .Values.external.database.host | quote }},
            "port": {{ .Values.external.database.port | quote }},
            "username": {{ .Values.external.database.username | quote }},
            "password": {{ .Values.external.database.password | quote }},
            "tableName": {{ .Values.plugins.custom.tableName | quote }},
            "apiKey": {{ .Values.external.ai.apiKey | quote }},
            "apiBase": {{ .Values.external.ai.apiBase | quote }},
            "apiPath": {{ .Values.external.ai.apiPath | quote }},
            "model": {{ .Values.external.ai.model | quote }}
          }
      - name: "Postgres"
        type: "Handle"
        enabled: {{ .Values.plugins.postgres.enabled }}
        settings: |
          {
            "region": {{ .Values.external.region | quote }},
            "host": {{ .Values.external.database.host | quote }},
            "port": {{ .Values.external.database.port | quote }},
            "username": {{ .Values.external.database.username | quote }},
            "password": {{ .Values.external.database.password | quote }}
          }
      - name: "Lark"
        type: "Handle"
        enabled: {{ .Values.plugins.lark.enabled }}
        settings: |
          {
            "region": {{ .Values.external.region | quote }},
            "webhook": {{ .Values.external.lark.webhook | quote }}
          }
    logging:
      level: {{ .Values.config.logging.level | quote }}
    kubeconfig: {{ .Values.config.kubeconfig | quote }}
